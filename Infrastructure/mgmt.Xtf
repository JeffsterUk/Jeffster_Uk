locals {
  monitor_private_dns_zones = [
    "privatelink.monitor.azure.com",
    "privatelink.oms.opinsights.azure.com",
    "privatelink.ods.opinsights.azure.com",
    "privatelink.agentsvc.azure-automation.net",
    "privatelink.blob.core.windows.net"
  ]

  private_dns_zones = concat(
    local.monitor_private_dns_zones,
    [
      "privatelink.vaultcore.azure.net",
      "privatelink.jeffster.uk"
    ]
  )

  nsg_rules = [
    {
      source_port_ranges           = ["*"]
      destination_port_ranges      = ["3443"]
      direction                    = "Inbound"
      protocol                     = "Tcp"
      source_address_prefixes      = ["ApiManagement"]
      destination_address_prefixes = ["VirtualNetwork"]
      description                  = "Management endpoint for Azure portal and PowerShell"
      name                         = "rule1"
      priority                     = 100
    },
    {
      source_port_ranges           = ["*"]
      destination_port_ranges      = ["6390"]
      direction                    = "Inbound"
      protocol                     = "Tcp"
      source_address_prefixes      = ["AzureLoadBalancer"]
      destination_address_prefixes = ["VirtualNetwork"]
      description                  = "Azure Infrastructure Load Balancer"
      name                         = "rule2"
      priority                     = 200
    },
    {
      source_port_ranges           = ["*"]
      destination_port_ranges      = ["443"]
      direction                    = "Outbound"
      protocol                     = "Tcp"
      source_address_prefixes      = ["VirtualNetwork"]
      destination_address_prefixes = ["Storage"]
      description                  = "Dependency on Azure Storage for core service functionality"
      name                         = "rule3"
      priority                     = 100
    },
    {
      source_port_ranges           = ["*"]
      destination_port_ranges      = ["1433"]
      direction                    = "Outbound"
      protocol                     = "Tcp"
      source_address_prefixes      = ["VirtualNetwork"]
      destination_address_prefixes = ["SQL"]
      description                  = "Access to Azure SQL endpoints for core service functionality"
      name                         = "rule4"
      priority                     = 200
    },
    {
      source_port_ranges           = ["*"]
      destination_port_ranges      = ["443"]
      direction                    = "Outbound"
      protocol                     = "Tcp"
      source_address_prefixes      = ["VirtualNetwork"]
      destination_address_prefixes = ["AzureKeyVault"]
      description                  = "Access to Azure Key Vault for core service functionality"
      name                         = "rule5"
      priority                     = 300
    },
    {
      source_port_ranges           = ["*"]
      destination_port_ranges      = ["1886", "443"]
      direction                    = "Outbound"
      protocol                     = "Tcp"
      source_address_prefixes      = ["VirtualNetwork"]
      destination_address_prefixes = ["AzureMonitor"]
      description                  = "Publish Diagnostics Logs and Metrics, Resource Health, and Application Insights"
      name                         = "rule6"
      priority                     = 400
    }
  ]
}

#######################################################################
#                            Resource Group                           #
#######################################################################
resource "azurerm_resource_group" "management" {
  name     = "management-rg"
  location = "Uk South"
  tags     = {}
}

#######################################################################
#                           Virtual Network                           #
#######################################################################
resource "azurerm_virtual_network" "management" {
  name                = "management-vnet"
  location            = azurerm_resource_group.management.location
  resource_group_name = azurerm_resource_group.management.name
  address_space       = ["10.0.0.0/16"]
  # dns_servers         = ["10.0.0.4", "10.0.0.5"]

  subnet {
    name           = "private_endpoints_snet"
    address_prefix = "10.0.1.0/24"
  }

  subnet {
    name           = "apim_snet"
    address_prefix = "10.0.2.0/24"
    security_group = "/subscriptions/87f34df8-a283-4f56-bc04-6a5e214d516d/resourceGroups/management-rg/providers/Microsoft.Network/networkSecurityGroups/management-apim-nsg"
  }

  subnet {
    name           = "app_gw_snet"
    address_prefix = "10.0.3.0/24"
  }

  tags = {}
}

resource "azurerm_network_security_group" "management" {
  name                = "management-apim-nsg"
  location            = azurerm_resource_group.management.location
  resource_group_name = azurerm_resource_group.management.name

  tags = {
    environment = "Production"
  }
}

resource "azurerm_network_security_rule" "management" {
  for_each                    = { for rule in local.nsg_rules : rule.name => rule }
  resource_group_name         = azurerm_network_security_group.management.resource_group_name
  network_security_group_name = azurerm_network_security_group.management.name
  access                      = "Allow"
  direction                   = each.value.direction
  protocol                    = each.value.protocol
  description                 = each.value.description
  name                        = each.value.name
  priority                    = each.value.priority

  source_port_range            = [for port_range in each.value.source_port_ranges : port_range if port_range == "*"] == ["*"] ? "*" : null
  source_port_ranges           = [for port_range in each.value.source_port_ranges : port_range if port_range == "*"] == ["*"] ? null : each.value.source_port_ranges
  destination_port_range       = [for port_range in each.value.destination_port_ranges : port_range if port_range == "*"] == ["*"] ? "*" : null
  destination_port_ranges      = [for port_range in each.value.destination_port_ranges : port_range if port_range == "*"] == ["*"] ? null : each.value.destination_port_ranges
  source_address_prefix        = length(each.value.source_address_prefixes) == 1 ? each.value.source_address_prefixes[0] : null
  source_address_prefixes      = length(each.value.source_address_prefixes) > 1 ? each.value.source_address_prefixes : null
  destination_address_prefix   = length(each.value.destination_address_prefixes) == 1 ? each.value.destination_address_prefixes[0] : null
  destination_address_prefixes = length(each.value.destination_address_prefixes) > 1 ? each.value.destination_address_prefixes : null
}

#######################################################################
#                           Private DNS Zone                          #
#######################################################################
resource "azurerm_private_dns_zone" "management" {
  for_each            = toset(local.private_dns_zones)
  name                = each.value
  resource_group_name = azurerm_resource_group.management.name
}

resource "azurerm_private_dns_zone_virtual_network_link" "example" {
  for_each              = toset(local.private_dns_zones)
  name                  = "${each.value}-link"
  resource_group_name   = azurerm_resource_group.management.name
  private_dns_zone_name = azurerm_private_dns_zone.management[each.value].name
  virtual_network_id    = azurerm_virtual_network.management.id
}

#######################################################################
#                          Private Link Scope                         #
#######################################################################
resource "azurerm_monitor_private_link_scope" "management" {
  name                = "management-ampls-001"
  resource_group_name = azurerm_resource_group.management.name
}

resource "azurerm_private_endpoint" "management" {
  name                          = "management-ampls-001-pe"
  location                      = azurerm_resource_group.management.location
  resource_group_name           = azurerm_resource_group.management.name
  subnet_id                     = (azurerm_virtual_network.management.subnet[*].id)[0]
  custom_network_interface_name = "management-ampls-001-pe-nic"

  private_service_connection {
    name                           = "management-ampls-001-pe"
    private_connection_resource_id = azurerm_monitor_private_link_scope.management.id
    is_manual_connection           = false
    subresource_names              = ["azuremonitor"]
  }

  private_dns_zone_group {
    name                 = "default"
    private_dns_zone_ids = [for pdnsz in azurerm_private_dns_zone.management : pdnsz.id if contains(local.monitor_private_dns_zones, pdnsz.name)]
  }
}

#######################################################################
#                       Log Analytics Workspace                       #
#######################################################################
resource "azurerm_log_analytics_workspace" "management" {
  name                            = "management-law-001"
  location                        = azurerm_resource_group.management.location
  resource_group_name             = azurerm_resource_group.management.name
  allow_resource_only_permissions = true        # default
  local_authentication_disabled   = false       # default
  sku                             = "PerGB2018" # Confirm with CA
  retention_in_days               = 30          # Confirm with CA
  daily_quota_gb                  = -1          # default (-1 = Unlimited)
  internet_ingestion_enabled      = true        # default
  internet_query_enabled          = true        # default
  tags                            = {}
}

# TODO: INVESTIGATE: THIS IS DEPLOYED TO MGMT SUB, NOT WL SUB, but it will come from Sub Vending
resource "azurerm_monitor_private_link_scoped_service" "management_law" {
  name                = "management-amplss-001"
  resource_group_name = azurerm_resource_group.management.name
  scope_name          = "management-ampls-001"
  linked_resource_id  = azurerm_log_analytics_workspace.management.id
}

#######################################################################
#                              Key Vault                              #
#######################################################################
data "azurerm_client_config" "current" {}
resource "azurerm_key_vault" "management" {
  name                       = "managementkv12542154"
  location                   = azurerm_resource_group.management.location
  resource_group_name        = azurerm_resource_group.management.name
  tenant_id                  = data.azurerm_client_config.current.tenant_id
  soft_delete_retention_days = 7
  purge_protection_enabled   = false

  sku_name                  = "standard"
  enable_rbac_authorization = true
}
resource "azurerm_private_endpoint" "management_kv" {
  name                = "${azurerm_key_vault.management.name}-pe"
  location            = azurerm_resource_group.management.location
  resource_group_name = azurerm_resource_group.management.name
  subnet_id           = (azurerm_virtual_network.management.subnet[*].id)[0]

  private_service_connection {
    name                           = "${azurerm_key_vault.management.name}-psc"
    private_connection_resource_id = azurerm_key_vault.management.id
    is_manual_connection           = false
    subresource_names              = ["vault"]
  }

  private_dns_zone_group {
    name                 = "default"
    private_dns_zone_ids = [for pdnsz in azurerm_private_dns_zone.management : pdnsz.id if pdnsz.name == "privatelink.vaultcore.azure.net"]
  }
}

#######################################################################
#                       API Management Services                       #
#######################################################################
resource "azurerm_public_ip" "management_apim" {
  name                = "management-apim-12542154-pip"
  location            = azurerm_resource_group.management.location
  resource_group_name = azurerm_resource_group.management.name
  allocation_method   = "Static"
  sku                 = "Standard"
  domain_name_label   = "management-apim-12542154-pip"

  tags = {
    environment = "Production"
  }
}

/*
# Not available on Internal Mode
resource "azurerm_api_management" "management" {
  name                = "management-apim-12542154"
  location            = azurerm_resource_group.management.location
  resource_group_name = azurerm_resource_group.management.name
  publisher_name      = "Jeffster"
  publisher_email     = "james.quinn@jeffster.uk"
  sku_name = "Developer_1"
  identity {
    type         = "SystemAssigned"
  }
  hostname_configuration {
    management {
      host_name = "apim-management.privatelink.jeffster.uk"
      key_vault_id = "https://managementkv12542154.vault.azure.net/secrets/jeffster-uk"
    }
    portal {
      host_name = "apim-portal.privatelink.jeffster.uk"
      key_vault_id = "https://managementkv12542154.vault.azure.net/secrets/jeffster-uk"      
    }
    developer_portal {
      host_name = "apim-developer.privatelink.jeffster.uk"
      key_vault_id = "https://managementkv12542154.vault.azure.net/secrets/jeffster-uk"      
    }
    scm {
      host_name = "apim-scm.privatelink.jeffster.uk"
      key_vault_id = "https://managementkv12542154.vault.azure.net/secrets/jeffster-uk"      
    }
    proxy {
      host_name = "management-apim-12542154.azure-api.net"
      # key_vault_id = "https://managementkv12542154.vault.azure.net/secrets/jeffster-uk"
    }
    proxy {
      host_name = "apim.privatelink.jeffster.uk"
      key_vault_id = "https://managementkv12542154.vault.azure.net/secrets/jeffster-uk"
    }
  }
}
*/

locals {
  apim_private_dns_a_records = [
    "apim-management",
    "apim-portal",
    "apim-developer",
    "apim-scm",
    "apim"
  ]
}

resource "azurerm_private_dns_a_record" "management-apim" {
  for_each            = toset(local.apim_private_dns_a_records)
  name                = each.value
  zone_name           = "privatelink.jeffster.uk"
  resource_group_name = azurerm_resource_group.management.name
  ttl                 = 300
  records             = ["10.0.2.4"]
}

#######################################################################
#                         Application Gateway                         #
#######################################################################
resource "azurerm_public_ip" "management_appgw" {
  name                = "management-appgw-pip"
  location            = azurerm_resource_group.management.location
  resource_group_name = azurerm_resource_group.management.name
  allocation_method   = "Static"
  sku                 = "Standard"
  domain_name_label   = "management-appgw-pip"

  tags = {
    environment = "Production"
  }
}

locals {
  backend_address_pool_name      = "management-appgw-beap"
  frontend_port_name             = "management-appgw-feport"
  frontend_ip_configuration_name = "management-appgw-feip"
  http_setting_name              = "management-appgw-be-htst"
  listener_name                  = "management-appgw-httplstn"
  request_routing_rule_name      = "management-appgw-rqrt"
  redirect_configuration_name    = "management-appgw-rdrcfg"
}

resource "azurerm_application_gateway" "management" {
  name                = "management-appgw"
  location            = azurerm_resource_group.management.location
  resource_group_name = azurerm_resource_group.management.name
  enable_http2        = true

  identity {
    type = "UserAssigned"
    identity_ids = ["/subscriptions/87f34df8-a283-4f56-bc04-6a5e214d516d/resourceGroups/management-rg/providers/Microsoft.ManagedIdentity/userAssignedIdentities/management-umi"]
  }

  sku {
    name     = "Standard_v2"
    tier     = "Standard_v2"
    capacity = 1
  }

  ssl_certificate {
    name                = "jeffster-uk"
    key_vault_secret_id = "https://managementkv12542154.vault.azure.net/secrets/jeffster-uk"
  }

  gateway_ip_configuration {
    name      = "my-gateway-ip-configuration"
    subnet_id = (azurerm_virtual_network.management.subnet[*].id)[2]
  }

  frontend_port {
    name = local.frontend_port_name
    port = 443
  }

  frontend_ip_configuration {
    name                 = local.frontend_ip_configuration_name
    public_ip_address_id = azurerm_public_ip.management_appgw.id
  }

  backend_address_pool {
    name = local.backend_address_pool_name
    fqdns = ["apim.privatelink.jeffster.uk"]
  }

  backend_http_settings {
    name                  = local.http_setting_name
    cookie_based_affinity = "Disabled"
    path                  = "/"
    port                  = 443
    protocol              = "Https"
    request_timeout       = 20
    probe_name            = "management-appgw-probe"
    pick_host_name_from_backend_address = true
  }

  http_listener {
    name                           = local.listener_name
    frontend_ip_configuration_name = local.frontend_ip_configuration_name
    frontend_port_name             = local.frontend_port_name
    protocol                       = "Https"
    ssl_certificate_name           = "jeffster-uk"
  }

  request_routing_rule {
    name                       = local.request_routing_rule_name
    priority                   = 9
    rule_type                  = "Basic"
    http_listener_name         = local.listener_name
    backend_address_pool_name  = local.backend_address_pool_name
    backend_http_settings_name = local.http_setting_name
  }

  probe {
    interval                                  = 30
    minimum_servers                           = 0
    name                                      = "management-appgw-probe"
    path                                      = "/status-0123456789abcdef"
    pick_host_name_from_backend_http_settings = true
    port                                      = 443
    protocol                                  = "Https"
    timeout                                   = 120
    unhealthy_threshold                       = 8
    match {
    status_code = [
      "200-399",
      ]
    }
  }
}